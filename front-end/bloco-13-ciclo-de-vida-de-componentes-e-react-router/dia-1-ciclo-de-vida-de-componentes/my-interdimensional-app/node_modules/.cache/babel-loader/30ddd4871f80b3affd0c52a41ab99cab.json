{"ast":null,"code":"var _jsxFileName = \"/home/thisouza/trybe/trybe-exercises/front-end/bloco-13-ciclo-de-vida-de-componentes-e-react-router/dia-1-ciclo-de-vida-de-componentes/my-interdimensional-app/src/App.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchCharacters = () => {\n      fetch('https://rickandmortyapi.com/api/character').then(response => response.json()).then(data => {\n        this.setState({\n          characters: data.results\n        });\n      });\n    };\n\n    this.state = {\n      characters: []\n    };\n  }\n\n  render() {\n    const {\n      characters\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ricky and Morty Characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body\",\n        children: characters.map(({\n          name,\n          image\n        }) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image,\n              alt: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this)]\n          }, name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/thisouza/trybe/trybe-exercises/front-end/bloco-13-ciclo-de-vida-de-componentes-e-react-router/dia-1-ciclo-de-vida-de-componentes/my-interdimensional-app/src/App.js"],"names":["React","Component","App","constructor","props","fetchCharacters","fetch","then","response","json","data","setState","characters","results","state","render","map","name","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,eAAe,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AACzCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,eAPmB,GAOD,MAAM;AACtBC,MAAAA,KAAK,CAAC,2CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZ,aAAKC,QAAL,CAAc;AAAEC,UAAAA,UAAU,EAAEF,IAAI,CAACG;AAAnB,SAAd;AACD,OAJD;AAKD,KAbkB;;AAEf,SAAKC,KAAL,GAAa;AACXF,MAAAA,UAAU,EAAE;AADD,KAAb;AAGD;;AASHG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA;AAAF,QAAiB,KAAKE,KAA5B;AACA,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBACIF,UAAU,CAACI,GAAX,CAAe,CAAC;AAAEC,UAAAA,IAAF;AAAQC,UAAAA;AAAR,SAAD,KAAqB;AACpC,8BAAS;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACP;AAAA,wBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,oBADO,eAEP;AAAK,cAAA,GAAG,EAAEC,KAAV;AAAiB,cAAA,GAAG,EAAED;AAAtB;AAAA;AAAA;AAAA;AAAA,oBAFO;AAAA,aAAgCA,IAAhC;AAAA;AAAA;AAAA;AAAA,kBAAT;AAID,SALC;AADJ;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAhCwC","sourcesContent":["import React, { Component } from 'react'\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n        characters: [],\n      };\n    }\n\n  fetchCharacters = () => {\n    fetch('https://rickandmortyapi.com/api/character')\n    .then(response => response.json())\n    .then(data => {\n      this.setState({ characters: data.results })\n    })\n  }\n  render() {\n    const { characters } = this.state\n    return (\n      <div>\n        <h1>\n          Ricky and Morty Characters\n        </h1>\n        <div className=\"body\">\n          { characters.map(({ name, image }) => {\n            return ( <div className=\"container\" key={name}>\n              <h3>{name}</h3>\n              <img src={image} alt={name}></img>\n            </div> )\n          }) }\n        </div>\n      </div>\n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}